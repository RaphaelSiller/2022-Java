
public class Kreis {
	double radius, umfang, flaeche;

	/**
	 * Liefert die Fläche des Kreises zurück
	 * 
	 * @return die Fläche des Kreises
	 */
	public double getFlaeche() {
		return flaeche;
	}

	/**
	 * Liefert den Radius des Kreises zurück
	 * 
	 * @return den Radius des Kreises
	 */
	public double getRadius() {
		return radius;
	}

	/**
	 * Liefert den Umfang des Kreises zurück
	 * 
	 * @return den Umfang des Kreises
	 */
	public double getUmfang() {
		return umfang;
	}

	/**
	 * Setzt die Fläche des Kreises. Die übergebene Fläche darf nicht 0 sein. Die
	 * Methode errechnet sich aus der Fläche den Radius und setzt diesen
	 * 
	 * @param flaeche
	 *            - die zu setzende Fläche
	 */
	public void setFlaeche(double flaeche) {
		if (flaeche != 0) {
			this.flaeche = flaeche;
			this.setRadius(Math.sqrt(flaeche / Math.PI));
		}
	}

	/**
	 * Setzt den Radius. Der Radius wird nur gesetzt, falls der übergebene Parameter
	 * radius größer oder gleich 0 ist, ansonsten wird der Radius nicht gesetzt und
	 * der alte Wert des Radiuses beibehalten.
	 * 
	 * @param radius,
	 *            welcher gesetzt werden soll
	 */
	public void setRadius(double radius) {
		if(radius >= 0) {
			this.radius = radius;
			this.umfang = 2 * Math.PI * radius;
			this.flaeche = Math.PI * Math.pow(radius, 2);
		}
	}

	/**
	 * Setzt den Umfang des Kreises. Der übergebene Umfang darf nicht 0 sein. Die
	 * Methode errechnet sich aus dem Umfang den Radius und setzt diesen
	 * 
	 * @param umfang - der zu setzende Umfang
	 */
	public void setUmfang(double umfang) {
		this.umfang = umfang;
		this.setRadius(umfang / (2 * Math.PI));
	}

	/**
	 * Gibt die Stringentsprechung des Kreises zurück.
	 */
	public String toString() {
		String ret = ("r=" + this.getRadius() + ",U=" + this.getUmfang() + ",F=" + this.flaeche);
		return ret;
	}

}
