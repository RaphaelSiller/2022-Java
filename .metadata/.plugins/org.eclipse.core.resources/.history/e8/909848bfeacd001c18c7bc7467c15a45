package jumpingBalls;
import java.applet.*;
import java.awt.*;

import javax.swing.JFrame;
import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;

/**
 * Applet welches die Klasse Ball verwendet und insgesamt 10 Bälle im 
 * Zeichenbereich bewegt
 * @author Michael Wild
 */
public class JumpingBalls extends JFrame
{
	/** 
	 * Statische Membervariable, welche sich in einem Array die zu bewegenden Bälle
	 * merkt. Diese Variable darf nicht als lokale Variable innerhalb der paint-Methode
	 * definiert werden, weil sie ansonsten nach jedem Aufruf der Methode zerstört 
	 * würde. Da aber die einzelnen Ballobjekte nach dem Ende der Methode und beim
	 * nächten Auruf der paint-Methode noch leben müssen, werden diese in einer
	 * statischen Membervariable der Klasse Applet abgelegt, die auch dann noch
	 * existiert und ihre Inhalte behält, wenn ein Aufruf der paint-Methode fertig 
	 * abgearbeitet wurde 
	 */
	private static Ball[] ball = null;
	/**
	 * Statische Konstante, welche sich die Anzahl der zu bewegenden Bälle merkt
	 */
	private static final int ANZAHL_BAELLE = (int)Math.pow(10, 1);

	/**
	 * Diese Methode wird immer dann aufgerufen, wenn der Inhalt des Applets neu 
	 * gezeichnet werden soll
	 */
	public JumpingBalls() {
		this.setTitle("Jumping Balls");
		this.setLocation(10,10);
		this.setSize(400, 300);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		
		this.setResizable(false);
		
	}
	
	/**
	 * Veranlasst dass das Programm millis Millisekunden pausiert
	 * @param millis Anzahl der Millisekunden die gewartet werden
	 */
	public void bremse(int millis) {
		try {
			Thread.sleep(millis);
		} catch (InterruptedException e) {
		}
	}
}